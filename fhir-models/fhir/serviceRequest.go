// Copyright 2019 The Samply Development Community
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package fhir

import "encoding/json"

// THIS FILE IS GENERATED BY https://github.com/samply/golang-fhir-models
// PLEASE DO NOT EDIT BY HAND

// ServiceRequest is documented here http://hl7.org/fhir/StructureDefinition/ServiceRequest
type ServiceRequest struct {
	Id                    *string           `json:"id,omitempty"`
	Meta                  *Meta             `json:"meta,omitempty"`
	ImplicitRules         *string           `json:"implicitRules,omitempty"`
	Language              *string           `json:"language,omitempty"`
	Text                  *Narrative        `json:"text,omitempty"`
	Extension             []Extension       `json:"extension,omitempty"`
	ModifierExtension     []Extension       `json:"modifierExtension,omitempty"`
	Identifier            []Identifier      `json:"identifier,omitempty"`
	InstantiatesCanonical []string          `json:"instantiatesCanonical,omitempty"`
	InstantiatesUri       []string          `json:"instantiatesUri,omitempty"`
	BasedOn               []Reference       `json:"basedOn,omitempty"`
	Replaces              []Reference       `json:"replaces,omitempty"`
	Requisition           *Identifier       `json:"requisition,omitempty"`
	Status                RequestStatus     `json:"status"`
	Intent                RequestIntent     `json:"intent"`
	Category              []CodeableConcept `json:"category,omitempty"`
	Priority              *RequestPriority  `json:"priority,omitempty"`
	DoNotPerform          *bool             `json:"doNotPerform,omitempty"`
	Code                  *CodeableConcept  `json:"code,omitempty"`
	OrderDetail           []CodeableConcept `json:"orderDetail,omitempty"`
	Subject               Reference         `json:"subject"`
	Encounter             *Reference        `json:"encounter,omitempty"`
	AuthoredOn            *string           `json:"authoredOn,omitempty"`
	Requester             *Reference        `json:"requester,omitempty"`
	PerformerType         *CodeableConcept  `json:"performerType,omitempty"`
	Performer             []Reference       `json:"performer,omitempty"`
	LocationCode          []CodeableConcept `json:"locationCode,omitempty"`
	LocationReference     []Reference       `json:"locationReference,omitempty"`
	ReasonCode            []CodeableConcept `json:"reasonCode,omitempty"`
	ReasonReference       []Reference       `json:"reasonReference,omitempty"`
	Insurance             []Reference       `json:"insurance,omitempty"`
	SupportingInfo        []Reference       `json:"supportingInfo,omitempty"`
	Specimen              []Reference       `json:"specimen,omitempty"`
	BodySite              []CodeableConcept `json:"bodySite,omitempty"`
	Note                  []Annotation      `json:"note,omitempty"`
	PatientInstruction    *string           `json:"patientInstruction,omitempty"`
	RelevantHistory       []Reference       `json:"relevantHistory,omitempty"`
}
type OtherServiceRequest ServiceRequest

// MarshalJSON marshals the given ServiceRequest as JSON into a byte slice
func (r ServiceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(struct {
		OtherServiceRequest
		ResourceType string `json:"resourceType"`
	}{
		OtherServiceRequest: OtherServiceRequest(r),
		ResourceType:        "ServiceRequest",
	})
}

// UnmarshalServiceRequest unmarshals a ServiceRequest.
func UnmarshalServiceRequest(b []byte) (ServiceRequest, error) {
	var serviceRequest ServiceRequest
	if err := json.Unmarshal(b, &serviceRequest); err != nil {
		return serviceRequest, err
	}
	return serviceRequest, nil
}
